name: Solidity Tests

on:
  pull_request:
    branches:
      - main
      - testnet
      - live
  push:
    branches:
      - main
      - testnet
      - live
  workflow_dispatch:      

jobs:
  tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Display branch information
        run: |
          echo "Running on branch: ${{ github.ref_name }}"
          if [[ -n "${{ github.base_ref }}" ]]; then
            echo "Target branch for pull request: ${{ github.base_ref }}"
          else
            echo "Not running on a pull request"
          fi

      - name: Determine Environment Prefix
        id: env_prefix
        run: |
          BRANCH=${{ github.base_ref }}  # This is set for pull requests
          [ -z "$BRANCH" ] && BRANCH=main  # Fallback to main branch if not a pull request
          PREFIX=$(echo $BRANCH | awk -F'-' '{print toupper($1)}')  # Extract prefix and convert to upper case
          echo "PREFIX=$PREFIX" >> $GITHUB_ENV
          echo "PREFIX=$PREFIX"
      
      - name: Set environment variables
        run: |
          # echo env variables
          echo "ETHEREUM_RPC_URL=${{ vars[format('{0}_ETHEREUM_RPC_URL', env.PREFIX)] }}"
          echo "POLYGON_RPC_URL=${{ vars[format('{0}_POLYGON_RPC_URL', env.PREFIX)] }}"
          echo "ETHEREUM_SALT=${{ vars[format('{0}_ETHEREUM_SALT', env.PREFIX)] }}"
          echo "POLYGON_SALT=${{ vars[format('{0}_POLYGON_SALT', env.PREFIX)] }}"
          echo "ETH_4337_FACTORY=${{ vars[format('{0}_ETH_4337_FACTORY', env.PREFIX)] }}"
          echo "ETH_4337_ACCOUNT=${{ vars[format('{0}_ETH_4337_ACCOUNT', env.PREFIX)] }}"
          echo "ETHEREUM_PRIVATE_KEY=${{ secrets[format('{0}_ETHEREUM_PRIVATE_KEY', env.PREFIX)] }}"
          echo "POLYGON_PRIVATE_KEY=${{ secrets[format('{0}_POLYGON_PRIVATE_KEY', env.PREFIX)] }}"

          # set env variables
          echo "ETHEREUM_RPC_URL=${{ vars[format('{0}_ETHEREUM_RPC_URL', env.PREFIX)] }}" >> $GITHUB_ENV
          echo "POLYGON_RPC_URL=${{ vars[format('{0}_POLYGON_RPC_URL', env.PREFIX)] }}" >> $GITHUB_ENV
          echo "ETHEREUM_SALT=${{ vars[format('{0}_ETHEREUM_SALT', env.PREFIX)] }}" >> $GITHUB_ENV
          echo "POLYGON_SALT=${{ vars[format('{0}_POLYGON_SALT', env.PREFIX)] }}" >> $GITHUB_ENV
          echo "ETH_4337_FACTORY=${{ vars[format('{0}_ETH_4337_FACTORY', env.PREFIX)] }}" >> $GITHUB_ENV
          echo "ETH_4337_ACCOUNT=${{ vars[format('{0}_ETH_4337_ACCOUNT', env.PREFIX)] }}" >> $GITHUB_ENV
          echo "ETHEREUM_PRIVATE_KEY=${{ secrets[format('{0}_ETHEREUM_PRIVATE_KEY', env.PREFIX)] }}" >> $GITHUB_ENV
          echo "POLYGON_PRIVATE_KEY=${{ secrets[format('{0}_POLYGON_PRIVATE_KEY', env.PREFIX)] }}" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          submodules: false

      - name: Initialize Top-Level Submodules
        run: git submodule update --init

      - name: Manually Handle Missing Submodule URL
        run: |
          cd lib/kernel
          git submodule deinit -f -- lib/ExcessivelySafeCall
          rm -rf .git/modules/lib/ExcessivelySafeCall
          git rm -f lib/ExcessivelySafeCall
          git submodule add https://github.com/nomad-xyz/ExcessivelySafeCall lib/ExcessivelySafeCall
          git submodule update --init --recursive
          cd ../..

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes

      - name: Run tests and coverage
        id: run_tests_and_coverage
        continue-on-error: true
        run: |
          TEST_RESULT=0
          forge test -vvv || TEST_RESULT=$?
          
          if [ $TEST_RESULT -eq 0 ]; then
            echo "Tests passed"
            forge coverage --report lcov
            forge coverage --report summary
          else
            echo "Tests failed"
            exit 1
          fi

      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          
      - name: Check test results
        if: github.event_name == 'pull_request' && (github.event.pull_request.base.ref == 'testnet' || github.event.pull_request.base.ref == 'live')
        run: |
          if [ ${{ steps.run_tests_and_coverage.outcome }} == "success" ]; then
            echo "Tests passed."
            exit 0
          else
            echo "Tests failed"
            SOURCE_BRANCH="${{ github.event.pull_request.head.ref }}"
            TARGET_BRANCH="${{ github.event.pull_request.base.ref }}"
            gh pr comment "$PR_URL" --body "Tests failed on pull request from branch $SOURCE_BRANCH to $TARGET_BRANCH. Please fix the issues before merging."
            exit 1
          fi
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          PR_URL: ${{ github.event.pull_request.number }}